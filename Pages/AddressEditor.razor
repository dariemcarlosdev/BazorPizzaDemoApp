@* Child component *@

<DataAnnotationsValidator />
<div class="form-field">
    <label>Name:</label>
    <div>
        @* create an ElementReference object to reference the input element. *@
        @* <InputText @* @ref="startName" @bind="Address.Name" /> *@
        <InputText @bind-Value="Address.Name" />
        <ValidationMessage For="@(() => Address.Name)" />
        @* 
            1 - Bound input control to model properties
            2 - Add the DataAnnotationsValidator component somewhere within the EditForm component.Due to this is the child Compnt. we need to added it in Checkout Parent Component.
            3 - To display the messages that validation generates, use the ValidationSummary component, which shows all the validation messages for all controls in the form. Added it in Checkout Parent .
                If you prefer to show validation messages next to each control, use multiple ValidationMessage components. Remember to tie each ValidationMessage control to a specific property of the model.
        *@
    </div>
</div>
<div class="form-field">
    <label>Line 1:</label>
    <div>
        <InputText @bind-Value="Address.Line1" />
        <ValidationMessage For="@(() => Address.Line1)"/>
    </div>
</div>

<div class="form-field">
    <label>Line 2:</label>
    <div>
        <InputText @bind-Value="Address.Line2" />
        <ValidationMessage For="@(() => Address.Line2)" />
    </div>
</div>

<div class="form-field">
    <label>City:</label>
    <div>
        <InputText @bind-Value="Address.City" />
        <ValidationMessage For="@(() => Address.City)" />
    </div>
</div>

<div class="form-field">
    <label>Region:</label>
    <div>
        <InputText @bind-Value="Address.Region" />
        <ValidationMessage For="@(() => Address.Region)" />
    </div>
</div>

<div class="form-field">
    <label>Postal code:</label>
    <div>
        <InputText @bind-Value="Address.PostalCode" />
        <ValidationMessage For="@(() => Address.PostalCode)" />
    </div>
</div>

@code {

    [Parameter] public Address Address { get; set;}

    // This code creates the ElementReference and then after a page has been rendered sets the focus to input with directive @ref="startName".
    //Note: ElementReference startName Not being used anymore, @ref="startName" removed.
   //private ElementReference startName;

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         await startName.FocusAsync();
    //     }
    
    }

}